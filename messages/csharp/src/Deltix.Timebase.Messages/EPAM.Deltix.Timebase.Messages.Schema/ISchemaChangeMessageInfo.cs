//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using EPAM.Deltix.Timebase.Messages;
using System;
using System.Collections.Generic;


namespace EPAM.Deltix.Timebase.Messages.Schema
{
    
    
    /// <summary>
    /// Message tha defines a change in stream schema.
    /// </summary>
    public interface ISchemaChangeMessageInfo : IRecordInfo
    {
        
        #region Properties
        /// <summary>
        /// Previous schema state.
        /// </summary>
        IReadOnlyList<IClassDescriptorInfo> PreviousState
        {
            get;
        }
        
        /// <summary>
        /// New schema state.
        /// </summary>
        IReadOnlyList<IClassDescriptorInfo> NewState
        {
            get;
        }
        
        /// <summary>
        /// New schema state.
        /// </summary>
        IReadOnlyList<ISchemaDescriptorChangeActionInfo> DescriptorChangeActions
        {
            get;
        }
        
        /// <summary>
        /// Message version
        /// </summary>
        UInt64 Version
        {
            get;
        }
        #endregion
        
        #region Methods
        /// <summary>
        /// Flag that indicates whether property PreviousState has an assigned value.
        /// <returns>true if property has an assigned value, false otherwise.</returns>
        /// </summary>
        Boolean HasPreviousState();
        
        /// <summary>
        /// Flag that indicates whether property NewState has an assigned value.
        /// <returns>true if property has an assigned value, false otherwise.</returns>
        /// </summary>
        Boolean HasNewState();
        
        /// <summary>
        /// Flag that indicates whether property DescriptorChangeActions has an assigned value.
        /// <returns>true if property has an assigned value, false otherwise.</returns>
        /// </summary>
        Boolean HasDescriptorChangeActions();
        
        /// <summary>
        /// Flag that indicates whether property Version has an assigned value.
        /// <returns>true if property has an assigned value, false otherwise.</returns>
        /// </summary>
        Boolean HasVersion();
        
        /// <summary>
        /// Creates copy of this instance.
        /// <returns>Copy.</returns>
        /// </summary>
        new ISchemaChangeMessageInfo Clone();
        #endregion
    }
}
